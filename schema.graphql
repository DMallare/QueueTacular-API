# scalar GraphQLDate

enum QueueStatusType {
    Open
    Closed
}

enum QueueItemStatusType {
    Waiting
    Served
    Removed
}

# Issue -> QueueItem
# IssueTable -> Queue

# Person (QueueItem) in the queue
type QueueItem {
    # _id: ID!
    id: Int!
    status: QueueItemStatusType!
    person: User
    # created: GraphQLDate!
    wait: Int
    description: String
}

type Queue {
    # _id: ID!
    id: Int!
    title: String!
    status: QueueStatusType!
    owner: User!
    description: String
    maxParticipants: Int
    maxWaitTime: Int
    items: [QueueItem]
}

type User {
  id: Int!
  signedIn: Boolean!
  name: String!
  email: String!
}

#
#input QueueItemInput {
#    status: RecordStatusType = Waiting
#    person: User!
#    description: String
#}

#
#input QueueInput {
#}

##### Top level declarations

type Query {
    about: String!
    showQueue(id: Int!): Queue
}