scalar GraphQLDate

enum QueueStatusType {
    Open
    Closed
}

enum RecordStatusType {
    Waiting
    Served
}

# Issue -> Record
# IssueTable -> Queue

# Person (Record) in the queue
type Record {
    _id: ID!
    id: Int!
    status: RecordStatusType!
    person: User
    created: GraphQLDate!
    wait: Int
    description: String
}


type Queue {
    _id: ID!
    id: Int!
    title: String!
    status: QueueStatusType!
    owner: SignedInUser!
    description: String
    maxParticipants: Int
    maxWaitTime: Int
}

type User {
  givenName: String
  name: String
  email: String
}

type SignedInUser {
  signedIn: Boolean!
  givenName: String
  name: String
  email: String
}

input RecordInputs {
    status: RecordStatusType = Waiting
    person: User  # if not signed in, input name String and email String
    description: String
}

input QueueInput {

}

"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input IssueUpdateInputs {
    title: String
    status: StatusType
    owner: String
    effort: Int
    due: GraphQLDate
    description: String
}

##### Top level declarations

type Query {
    about: String!
    showQueue(title: String!): Queue
}